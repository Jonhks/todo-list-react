{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","inputText","todos","setTodos","setInputText","setStatus","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filteredHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.597bf7a1.chunk.js","sourcesContent":["import React from 'react';\n\nconst Form = ({inputText, todos, setTodos, setInputText, setStatus}) => {\n\n  const inputTextHandler = (e) => {\n    setInputText(e.target.value)\n  }\n\n  const submitTodoHandler = (e) => {\n    e.preventDefault();\n    setTodos([\n      ...todos,\n      {\n        text: inputText, \n        completed: false,\n        id: Math.random() * 1000\n      }\n    ])\n    setInputText('')\n  }\n\n  const statusHandler = (e) => {\n    setStatus(e.target.value)\n  }\n\n  return (\n    <form>\n    <input \n      value={inputText} \n      onChange={inputTextHandler} \n      type=\"text\" \n      className=\"todo-input\" \n    />\n    <button \n      onClick={submitTodoHandler} \n      className=\"todo-button\" \n      type=\"submit\"\n    >\n      <i className=\"fas fa-plus-square\"></i>\n    </button>\n    <div className=\"select\">\n      <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\n        <option value=\"all\">Todas</option>\n        <option value=\"completed\">Completas</option>\n        <option value=\"uncompleted\">Incompletas</option>\n      </select>\n    </div>\n  </form>\n  )\n};\n\nexport default Form;","import React from 'react'\n\nconst Todo = ({text, todo, todos, setTodos}) => {\n\n  const deleteHandler = () => {\n    setTodos(todos.filter(el => el.id !== todo.id))\n  }\n\n  const completeHandler = () => {\n    setTodos(todos.map(item => {\n      if(item.id === todo.id){\n        return{\n          ...item, completed: !item.completed\n        }\n      }\n      return item\n    }))\n  }\n\n  return (\n    <div>\n      <div className=\"todo\">\n        <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>{text}</li>\n        <button onClick={completeHandler} className=\"complete-btn\">\n          <i className=\"fas fa-check\"></i>\n        </button>\n        <button onClick={deleteHandler} className=\"trash-btn\">\n        <i className=\"fas fa-trash\"></i>\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default Todo;\n","import React from 'react';\nimport Todo from './Todo'\n\nconst TodoList = ({todos, setTodos, filteredTodos}) => {\n  return (\n    <div>\n      <div className=\"todo-container\">\n        <ul className=\"todo-list\">\n          {filteredTodos.map(todo =>(\n            <Todo \n              todo={todo}\n              setTodos={setTodos}\n              todos={todos}\n              key={todo.id} \n              text={todo.text}\n            />\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default TodoList;","import React, {useState, useEffect} from 'react';\nimport './App.css';\n\nimport Form from './components/Form'\nimport TodoList from './components/TodoList'\n\nfunction App() {\n  const [inputText, setInputText] = useState('');\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState('all');\n  const [filteredTodos, setFilteredTodos] = useState([]);\n // UseEffect\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n\n  useEffect(() => {\n    const filteredHandler = () => {\n      switch(status){\n        case 'completed':\n            setFilteredTodos(todos.filter(todo => todo.completed === true));\n            break;\n        case 'uncompleted':\n          setFilteredTodos(todos.filter(todo => todo.completed === false));\n          break;\n          default:\n            setFilteredTodos(todos);\n          }\n        }\n        filteredHandler();\n        saveLocalTodos();\n      }, [todos, status])\n\n\n  const saveLocalTodos = () => {\n    localStorage.setItem('todos', JSON.stringify(todos))\n  } \n\n  const getLocalTodos = () => {\n    if(localStorage.getItem('todos') === null){\n      localStorage.setItem('todos', JSON.stringify([]))\n    } else {\n      let todoLocal = JSON.parse(localStorage.getItem('todos'))\n      setTodos(todoLocal)\n    }\n  }\n\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Todo List</h1>\n      </header>\n      <Form \n        inputText={inputText} \n        todos={todos} \n        setTodos={setTodos} \n        setInputText={setInputText}\n        setStatus={setStatus}\n      />\n      <TodoList \n        todos={todos} \n        setTodos={setTodos} \n        filteredTodos={filteredTodos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}